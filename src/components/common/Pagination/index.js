import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useTranslation } from 'react-i18next';
import { IconChevronLeft, IconChevronRight } from '../../../assets/icons';
export const Pagination = ({ page, take, total, setPage }) => {
    const { t } = useTranslation(['common']);
    const totalPages = Math.ceil(total / take);
    const showPagination = totalPages ? totalPages > 1 : false;
    const neutralStyle = 'relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0';
    const activeStyle = 'relative z-10 inline-flex items-center bg-primary-400 px-4 py-2 text-sm font-semibold text-white focus:z-20 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600';
    return (_jsxs("div", { className: "flex mt-5 items-center justify-between border-gray-200 bg-white py-3", children: [_jsxs("div", { className: "flex flex-1 justify-between sm:hidden", children: [_jsx("button", { onClick: () => (page === 1 ? null : setPage(page - 1)), className: "relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50", children: t('common:previous') }), _jsx("button", { onClick: () => (totalPages === page ? null : setPage(page + 1)), className: "relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50", children: t('common:next') })] }), _jsxs("div", { className: "hidden sm:flex sm:flex-1 sm:items-center sm:justify-between", children: [_jsx("div", { children: _jsxs("p", { className: "text-sm text-gray-700", children: [t('common:showing'), " ", _jsx("span", { className: "font-medium", children: page }), ' ', t('common:to'), " ", _jsx("span", { className: "font-medium", children: take }), ' ', t('common:of'), " ", _jsx("span", { className: "font-medium", children: total }), ' ', t('common:results')] }) }), _jsx("div", { children: showPagination && (_jsxs("nav", { className: "isolate inline-flex -space-x-px rounded-md shadow-sm", "aria-label": "Pagination", children: [_jsxs("a", { onClick: () => (page === 1 ? null : setPage(page - 1)), className: "relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0", children: [_jsx("span", { className: "sr-only", children: t('common:previous') }), _jsx(IconChevronLeft, {})] }), Array.from({ length: totalPages }, (_, index) => (_jsx("div", { children: _jsx("button", { "aria-current": "page", onClick: () => { setPage(index + 1); }, className: index + 1 === page ? activeStyle : neutralStyle, children: index + 1 }) }, index))), _jsxs("a", { onClick: () => (totalPages === page ? null : setPage(page + 1)), className: "relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0", children: [_jsx("span", { className: "sr-only", children: t('common:next') }), _jsx(IconChevronRight, {})] })] })) })] })] }));
};
